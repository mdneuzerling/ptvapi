% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/patterns.R
\name{patterns}
\alias{patterns}
\title{Retrieve the stopping pattern of a run}
\usage{
patterns(
  run_id,
  route_type,
  stop_id = NULL,
  datetime = NULL,
  user_id = determine_user_id(),
  api_key = determine_api_key()
)
}
\arguments{
\item{run_id}{An integer run ID. This may retrieved from the \code{departures()}
or \code{runs_on_route()} functions.}

\item{route_type}{Optionally filter results by a route type. A route type can
be provided either as a non-negative integer code, or as a character:
"Tram", "Train", "Bus", "Vline" or "Night Bus". Character inputs are not
case-sensitive. Use the \code{route_types} function to extract a vector of all
route types.}

\item{stop_id}{Integer. Optionally filter results to a specific stop ID.
These can be searched for with the \code{stops_on_route()} and \code{stops_nearby()}
functions.}

\item{datetime}{POSIXct or Character. Optionally filter results to a
datetime. Characters are automatically converted to datetimes, and are
assumed to be given as Melbourne time. Defaults to the current date and
time.}

\item{user_id}{Integer or character. A user ID or devid provided by Public
Transport Victoria. See section "Obtaining API authentication details".}

\item{api_key}{Character. An API key, with dashes, provided by Public
Transport Victoria. See section "Obtaining API authentication details".}
}
\value{
An object of class "ptvapi", which is effectively a list with the
following names: \itemize{
\item \code{departures}
\item \code{stops}
\item \code{routes}
\item \code{runs}
\item \code{directions}
\item \code{disruptions}
}
}
\description{
A pattern consists of all departures, stops, routes, runs, directions and
disruptions associated with a particular run ID. This is returned as a list
of tibbles, with output corresponding to their respective API calls.
}
\details{
The \code{stops} tibble has an output similar to that returned by
\code{stops_on_route}. The \code{routes} tibble does not contain service status
information.
}
\examples{
\dontrun{
patterns(run_id = 1, route_type = 0)
patterns(run_id = 1, route_type = "Train")
patterns(run_id = 1, route_type = "Train", datetime = "2020-03-01T16:41:50")
}

}
