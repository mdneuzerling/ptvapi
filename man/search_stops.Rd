% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search.R
\name{search_stops}
\alias{search_stops}
\title{Search for stops using text}
\usage{
search_stops(
  search_term,
  latitude = NULL,
  longitude = NULL,
  max_distance = NULL,
  route_types = NULL,
  user_id = determine_user_id(),
  api_key = determine_api_key()
)
}
\arguments{
\item{search_term}{Character. Term used to perform search.}

\item{latitude}{Numeric. Latitude in decimal degrees. For example, Flinders
Street Station is at approximately -37.8183 latitude.}

\item{longitude}{Numeric. Longitude in decimal degrees. For example, Flinders
Street Station is at approximately 144.9671 longitude.}

\item{max_distance}{Integer. Optionally filter by maximum distance from the
given location, in metres.}

\item{route_types}{Integer or character vector. Optionally filter by a vector
of route types. A route type can be provided either as a non-negative
integer code, or as a character: "Tram", "Train", "Bus", "Vline" or "Night
Bus". Character inputs are not case-sensitive. Use the \code{route_types}
function to extract a vector of all route types.}

\item{user_id}{Integer or character. A user ID or devid provided by Public
Transport Victoria. See section "Obtaining API authentication details".}

\item{api_key}{Character. An API key, with dashes, provided by Public
Transport Victoria. See section "Obtaining API authentication details".}
}
\value{
A tibble with the following columns: \itemize{
\item{\code{stop_id}}
\item{\code{stop_name}}
\item{\code{stop_suburb}}
\item{\code{route_type}}
\item{\code{stop_sequence}}
\item{\code{stop_latitude}}
\item{\code{stop_longitude}}
\item{\code{disruption_ids}}
}
}
\description{
This function will search stops in which the search term can be found in
either the stop name or the stop suburb. The search is case-insensitive.
The search term must contain at least 3 characters, and cannot be numeric.
}
\examples{
\dontrun{
search_stops("Ascot Vale")
search_stops("Ascot Vale", route_types = c("Train", "Tram"))
search_stops("Ascot Vale", route_types = 1)

search_stops(
  "Ascot Vale",
  latitude = -37.774240,
  longitude = 144.915518
)
search_stops(
  "Ascot Vale",
  latitude = -37.774240,
  longitude = 144.915518,
  max_distance = 100
)
}
}
