% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/departures.R
\name{departures}
\alias{departures}
\title{Retrieve departures at a stop}
\usage{
departures(
  stop_id,
  route_type,
  route_id = NULL,
  direction_id = NULL,
  datetime = NULL,
  max_results = 5,
  include_cancelled = FALSE,
  user_id = determine_user_id(),
  api_key = determine_api_key()
)
}
\arguments{
\item{stop_id}{An integer stop ID returned by the \code{stops_on_route} or
\code{stops_nearby} functions.}

\item{route_type}{A route type which can be provided either as a non-negative
integer code, or as a character: "Tram", "Train", "Bus", "Vline" or "Night
Bus". Character inputs are not case-sensitive. Use the \code{route_types}
function to extract a vector of all route types.}

\item{route_id}{Optionally filter by a route ID. These can be obtained with
the \code{routes()} function.}

\item{direction_id}{Optionally filter by a direction ID. These can be
obtained with the \code{route_directions()} function.}

\item{datetime}{POSIXct or Character. Optionally filter results to a
datetime. Characters are automatically converted to datetimes, and are
assumed to be given as Melbourne time. Defaults to the current date and
time.}

\item{max_results}{Integer. The maximum number of departures to return for
each route_id. Defaults to 5.}

\item{include_cancelled}{Logical. Whether results should be returned if they
have been cancelled. Metropolitan train services only. Defaults to FALSE.}

\item{user_id}{Integer or character. A user ID or devid provided by Public
Transport Victoria. See section "Obtaining API authentication details".}

\item{api_key}{Character. An API key, with dashes, provided by Public
Transport Victoria. See section "Obtaining API authentication details".}
}
\description{
Retrieve departures at a stop
}
\details{
All timestamps returned by this function are in Melbourne time.
}
